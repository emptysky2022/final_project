html 작성요령

1. <body> 에는 전체 페이지를 기준으로 얼만큼의 페이지를 보여줄지 결정하는 속성(max-width : n%  => 이번 프로젝트에서는 전체의 80%를 사용하려고 한다.)을 넣어두었다. 

2. <body> 안에 header, main, footer를 관리할 ({파일이름}+_box)
이라는 이름의 div를 설정해 두어 각 요소들이 어느 위치를 잡을건지 큰 틀을 잡아놓았다.

3. header, main, footer 아래는 크게
   container라는 큰 틀을 잡아 주었습니다.

4. container의 자식요소들에는 class 이름을 주었지만 어느곳에 위치하는지 한번에 찾기 위해 추가로 아래의 규칙에 맞게 box 형식으로도 이름을 주었습니다.(단순히 빠르게 어느 위치에 있는지 확인하기 위해 사용하는 규칙이므로 이해가 안된다면 패스하셔도 좋습니다.)

5. 규칙은 다음과 같습니다.
   (1)  box1 box2 box3 .... box(n) 순서로 자손의 자손이 될때마다 숫자를 늘려 순서를 정해주습니다. (h1 h2 h3 ...의 방식과 같다고 생각하시면 편해요)

   (2) 최종 박스 안(최종 박스의 자식)에는 item(이미지파일, 글자, 영상 등등) 이 들어있도록 합니다.

   (3) 같은 위치에 있는 다른 박스들은 _숫자(2부터 시작) 형식으로 이름을 붙여줍니다.

   (4) 이렇게 되면 css에서는 container바로 아래에 있는 박스부터 차례대로 작성해줘야 원하는 자손요소에 갈 수 있으니 이 형식으로 css를 쓰려면 꼭 box1 박스부터 써주셔야 합니다.
      ex) .box1 .box2 .box3 .itm_2 {
         height:70px;
         width:150px;
      }


   (5) 그럼 규칙들의 예시를 보시겠습니다.

<container>
   <box1>
      <box2>
         <box3>
            <box4>
               <box5>
                  <img class="item" src="">
                  <a class="item_2" href=""></a>
               <box5>
            </box4>
         </box3>
      </box2>
   </box1>
   <box1_2>
      <box2>
         ...
            <box(n)>      
               <item>
               </item>
               <item_2>
               </item_2>
               ...
               <item_n>
               </item_n>
            </box(n)>
         ...
      </box2>
   </box1_2>
</container>










<<모바일:320px~480px , 태블릿:768px~1024px, 데스크탑:1024~>>

<<vh, vw>>
v는 view point를 나타내며 h, w는 각각 height, width를 나타낸다.
v는 현재 실행중인 스크린 크기에 맞춰 상대적 크기를 반환하겠다는 뜻이다.
100vh와 100vw가 전체화면의 기준이 된다.
참고로 %와 비슷하지만 %대신 이걸 쓰는 이유는 vh 와 vw 는 열려있는 화면 전체의 상대길이이기 때문에 스크롤바를 포함한 길이를 반환하기 때문에 사용한다.


<<:root(css변수)>>
:root 값에 "제목" : "지정할 속성"을 설정해두고

원하는 태그로 가서 var("제목")을 써주면 :root에 써놨던 값을 사용할 수 있다. 

이는 한번에 바꿀때 유용한 것들을 모아서 root값에 지정해두기 위해 사용한다.

<<max-width>>
최상위 요소에 width값을 주고 
전체 요소에 max-width값을 100%로 주면 
그 페이지 내의 가로 길이가 최대 최상위 요소에 준 값으로 고정된다.이번 프로젝트에서는 1200px을 넘어가지 않도록 고정하고자 한다.

<<clamp(x,y,z)>>
여기서 사용할 클럼프 함수는 글자의 크기를 반응형으로 보여주기 위해 사용하는데 작거나 커질때 너무 커지지 않게 최소값과 최대값을 주어 제한을 걸어 줄 수 있는 함수이다. x자리에 최솟값 y자리에 얼마나 늘어나거나 줄어들지, z자리에 최대값을 정해줄 수 있다.
그리고 px가 아니라 vw를 주었는데 이는 반응형으로 나타내기 위해 (화면 크기에 맞춰) 조절 되도록 하였다. 

<<flex>>
일단 이번 프로젝트는 왠만하면 레이아웃 설정할 때 display-inline요소나 float방식보단 최신 방식인 flex방식을 사용해 css를 완성시키고자 하였다. 왜냐하면 flex의 유일한 단점이 익스플로어에서 사용못한다는 것인데 이것이 단점이 되지 않게 되었기 때문이다.

flex의 특징으로는 개인의 요소에게 값을 주는것이 아니라 부모요소에 준다는 것인데 부모요소 안에 있는 자식요소들의 위치를 자유롭게 바꾸는 것을 flex라고 기억하면 flex에 대해 이해하기 쉬울것으로 생각된다.


<flex 부모 속성>
 flex의 부모속성과 자식속성에 주는 것이 다른데 먼저 부모 속성을 보고자 한다.
 ======부모속성======
 1. flex-direction 속성: 자손 요소를 수평이나 수직으로 나열시키는 것
    row	- 부모가 flex준 자손들을 수평(가로)나열 처리시킴(정방향)
    row-reverse - 부모가 flex준 자손들을 수평나열 처리시킴(역방향)
    column - 부모가 flex준 자손들을 수직(세로)나열 처리시킴(정방향)
    column-reverse - 부모가 flex준 자손들을 수직나열 
                     처리시킴(역방향)
 

 
 2. justify-content속성 : 메인축 방향으로 아이템들을 정렬하는 방법을 정해놓은 속성(쉽게 말해 flex-direction이 row(가로 배치)일 때는 오른쪽, column(세로 배치)일 때는 아래 방향으로 정렬하는 여러가지 속성)

    flex-start(기본값) : 아이템들을 시작점으로 모이게 정렬합니다.
    flex-end :아이템들을 끝점으로 모이게 정렬합니다.
    center: 아이템들을 가운데로 모이게 정렬합니다.

    /****아래3개는 일정한 간격을 두게 정렬하는 방법인데 간격 사이의 차이가 있음****/
    space-between: 아이템들의 “사이(between)”에 균일한 간격을 만들어 줍니다.(쉽게 말해, 양 끝에는 간격을 띄지 않음)
    space-around:아이템들의 “둘레(around)”에 균일한 간격을 만들어 줍니다. (쉽게 말해, 양끝에 1씩 띄웠다면 자식요소들 끼리의 간격은 1+1=2씩 띄워지게 됨)
    space-evenly:
    아이템들의 사이와 양 끝에 균일한 간격을 만들어 줍니다.
    (해당 축의 모든 간격을 동일하게)


 3. align-items속성 : 자손 요소들을 부모의 세로축에 맞춰 정렬하는 방법
    
    align-items: flex-start :세로축의 시작지점 부터 자식요소(flex-item)가  보여진다.
    align-items: center : 세로축의 가운데 부터 자식요소 시작
    align-items: flex-end : 세로축의 마지막 부터 자식요소 시작
    align-items: stretch : 부모영역을 꽉 채워서 보여준다.
 
 4. flex-wrap속성 : 자손이 부모보다 클 때(부모박스의 요소보다 컨텐츠가 많을때) 줄바꿈을 할지 말지 결정하는 방법
    nowrap: 기본값, 줄바꿈을 안한다.
    wrap : 줄바꿈 한다.
    wrap-reverse : 여러 줄일 경우 줄의 순서를 뒤집어 처리

 ======자식속성======
    flex-item 하위속성

    order속성 : {order:숫자}일때 숫자 자리에 순번을 쓰면 그 순서대로 자식요소들의 순서가 바뀐다. 

    flex속성 : flex 속성을 알기전에 flex-basis ,flex-grow ,flex-shrink를 알아야 하는데 이 3개를 한번에 사용하는것이 flex 속성이다.
        flex-basis : 화면의 크기 변화가 일어나기전의 초기 값을 지정
        flex-grow : 화면의 크기가 커질수록 0은 고정,  숫자는 몇배로 커지는지 결정한다.
        felx-shrink : 화면의 크기가 작아질 수록 0은 고정, 숫자는 몇배로 작아지는지를 결정한다.

    align-self

display-flex : flex 방식을 사용하기 위해 부모 컨테이너에 써줘야 한다.

flex-basis: n%
-> 박스의 크기를 부모요소 길이의 n%만큼 줄 수 있다. 











===================나중에 쓸만할 영상==========
가격 표기할때 각 윈도우 상황에 맞게 가격 간결하게 표기하기

상대시간 나타내기(n초 전, n분 전 등등)
https://www.youtube.com/watch?v=2AMRTAFSh98


★★★★★
꿀꿀꿀꿀꿀꿀꿀팁!!
자바스크립트 애니메이션 라이브러리
https://www.youtube.com/watch?v=wbDpZwDRgRk